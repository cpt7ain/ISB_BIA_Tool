<UserControl x:Class="ISB_BIA_IMPORT1.View.Process_View"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm="clr-namespace:ISB_BIA_IMPORT1.ViewModel"
             xmlns:c="clr-namespace:ISB_BIA_IMPORT1.Converter"
             mc:Ignorable="d" 
             d:DesignHeight="700" 
             d:DesignWidth="1200"
             Background="LightSteelBlue"
             DataContext="{Binding Source={StaticResource Locator}, Path=Process}">
    <UserControl.Resources>
        <ResourceDictionary>
            <c:TextInputToVisibilityConverter x:Key="TextInputToVisibilityConverter" />
            <c:ComparisonConverter x:Key="ComparisonConverter"/>
            <c:NegateBooleanToVisibilityConverter x:Key="convHid"/>
            <BooleanToVisibilityConverter x:Key="convVis"/>
            <c:ISToBrushConverter x:Key="ISToBrushConverter"/>
            <c:MaxValuesToEnabledConverter x:Key="MaxValuesToEnabledConverter"/>
            <c:NumToAlphBinaryConverter x:Key="NumToAlphBinaryConverter"/>
            <c:BinaryToBrushConverter x:Key="BinaryToBrushConverter"/>
            <c:InfoVisConverter x:Key="InfoVisConverter"/>
            <c:ComparisonToVisConverter x:Key="ComparisonToVisConverter"/>
            <ControlTemplate x:Key="EllipseWithText" TargetType="{x:Type Button}">
                <Grid x:Name="MainGrid">
                    <Rectangle x:Name="MainRectangle" Fill="White" Stroke="Black" RadiusX="15" RadiusY="15"/>
                    <ContentPresenter x:Name="Presenter"
                                  HorizontalAlignment="Center"  VerticalAlignment="Center" 
                                  TextBlock.Foreground="Black"/>
                    <Path x:Name="Cross"
                                  Stretch="Fill" Stroke="Black" 
                                  StrokeThickness="2" Width="8" Height="8" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="MainRectangle" Property="Fill" Value="LimeGreen"/>
                        <Setter TargetName="MainRectangle" Property="StrokeThickness" Value="2"/>
                        <Setter TargetName="Cross" Property="Stroke" Value="White" />
                        <Setter TargetName="Presenter" Property="TextBlock.Foreground" Value="White" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Storyboard x:Key="InactiveApplicationsSB">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="border">
                    <EasingDoubleKeyFrame KeyTime="0" Value="40"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="40"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
                    <EasingColorKeyFrame KeyTime="0" Value="Red"/>
                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="Red"/>
                    <EasingColorKeyFrame KeyTime="0:0:0.8" Value="White"/>
                    <EasingColorKeyFrame KeyTime="0:0:1.3" Value="Red"/>
                </ColorAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="InactiveVpSB">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="border1">
                    <EasingDoubleKeyFrame KeyTime="0" Value="40"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="40"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label1">
                    <EasingColorKeyFrame KeyTime="0" Value="Red"/>
                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="Red"/>
                    <EasingColorKeyFrame KeyTime="0:0:0.8" Value="White"/>
                    <EasingColorKeyFrame KeyTime="0:0:1.3" Value="Red"/>
                </ColorAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="InactiveNpSB">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="border2">
                    <EasingDoubleKeyFrame KeyTime="0" Value="40"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="40"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label2">
                    <EasingColorKeyFrame KeyTime="0" Value="Red"/>
                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="Red"/>
                    <EasingColorKeyFrame KeyTime="0:0:0.8" Value="White"/>
                    <EasingColorKeyFrame KeyTime="0:0:1.3" Value="Red"/>
                </ColorAnimationUsingKeyFrames>
            </Storyboard>
            <ControlTemplate x:Key="NotEmptyValidator">
                <StackPanel>
                    <!-- Placeholder for the TextBox itself -->
                    <Border BorderBrush="Red" BorderThickness="1.0">
                        <AdornedElementPlaceholder />
                    </Border>
                    <ItemsControl ItemsSource="{Binding}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ErrorContent}" Foreground="Red" FontSize="14"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </ControlTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="100*"/>
        </Grid.RowDefinitions>
        <FrameworkElement x:Name="dummyElement" Visibility="Collapsed"/>
        <Border Grid.Column="0" Grid.ColumnSpan="2">
            <Grid>
                <Label Content="{Binding Str_Header}" FontWeight="Bold" Grid.ColumnSpan="2" Margin="10,0,0,0" VerticalAlignment="Center"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom" Visibility="Hidden">
                    <StackPanel.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </StackPanel.RenderTransform>
                    <StackPanel.Style>
                        <Style>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ProcessCurrent.Kritischer_Prozess}" Value="Ja">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="-40"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-40"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-40"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Collapsed}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <Label Content="Kritischer Prozess" HorizontalAlignment="Center" FontSize="18" FontWeight="Bold" Foreground="Red">
                        <Label.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ProcessCurrent.Kritischer_Prozess}" Value="Ja">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                                        <EasingColorKeyFrame KeyTime="0:0:0.8" Value="Red"/>
                                                        <EasingColorKeyFrame KeyTime="0:0:1.0" Value="White"/>
                                                        <EasingColorKeyFrame KeyTime="0:0:1.3" Value="Red"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                    <Button Content="?" Command="{Binding Cmd_ShowMsg}" CommandParameter="{Binding Str_Msg_Krit}" Foreground="red" Width="30" Height="30" FontWeight="Bold" Template="{StaticResource EllipseWithText}"/>
                </StackPanel>
                <Button Content="Zurück" HorizontalAlignment="Right" Background="Wheat" Margin="0,0,10,0" VerticalAlignment="Center" Command="{Binding Cmd_NavBack}"/>
            </Grid>
        </Border>
        <Border Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" Margin="10" Background="White" BorderBrush="Black" BorderThickness="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="150"/>
                    <ColumnDefinition Width="600*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="50*"/>
                    <RowDefinition Height="50*"/>
                    <RowDefinition Height="400*"/>
                    <RowDefinition Height="50*"/>
                </Grid.RowDefinitions>
                <Label Content="Prozess:" FontWeight="Bold" VerticalAlignment="Center" Grid.Row="0"  HorizontalAlignment="Right"/>
                <Label Content="Sub-Prozess:"  FontWeight="Bold" VerticalAlignment="Center" Grid.Row="1" HorizontalAlignment="Right"/>
                <Border Grid.Column="1" Grid.Row="0" Margin="20,0,120,0">
                    <TextBlock Text="{Binding ProcessCurrent.Prozess}" Validation.ErrorTemplate="{x:Null}" Foreground="Black" TextWrapping="WrapWithOverflow" VerticalAlignment="Center"/>
                </Border>
                <Button Command="{Binding Cmd_ExportProcessHistory}" ToolTip="Klicken Sie hier, um eine Excel-Datei der Prozess-Bearbeitungs-Historie zu exportieren" Margin="0,0,10,0" Content="Historie&#x0a;Excel-Export" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.RowSpan="2"/>
                <Border Grid.Column="1" Margin="20,0,120,0" Grid.Row="1">
                    <TextBlock Text="{Binding ProcessCurrent.Sub_Prozess}" Validation.ErrorTemplate="{x:Null}" Foreground="Black" TextWrapping="WrapWithOverflow" VerticalAlignment="Center"/>
                </Border>
                <TabControl SelectedIndex="{Binding CurrentTab}" HorizontalAlignment="Stretch" Grid.Row="2" Grid.ColumnSpan="2">
                    <TabItem Header="Prozessstammdaten" IsEnabled="False">
                        <AdornerDecorator>
                            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                                <Grid Background="#FFE5E5E5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="10"/>
                                        <ColumnDefinition Width="120*"/>
                                        <ColumnDefinition Width="200*"/>
                                        <ColumnDefinition Width="50*"/>
                                        <ColumnDefinition Width="10"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="40"/>
                                        <RowDefinition Height="75*" MinHeight="70"/>
                                        <RowDefinition Height="75*" MinHeight="70"/>
                                        <RowDefinition Height="75*" MinHeight="60"/>
                                        <RowDefinition Height="75*" MinHeight="60"/>
                                        <RowDefinition Height="75*" MinHeight="60"/>
                                        <RowDefinition Height="75*" MinHeight="60"/>
                                        <RowDefinition Height="10"/>
                                    </Grid.RowDefinitions>
                                    <Button Command="{Binding Cmd_ResetValues}" Grid.ColumnSpan="2" Content="Maske zurücksetzen" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" Visibility="{Binding Mode, Converter={StaticResource ComparisonToVisConverter}, ConverterParameter={x:Static vm:ProcAppMode.Change}}"/>
                                    <TextBlock Text="Prozessname" Foreground="Black" ToolTip="Pflichtfeld" FontWeight="Bold" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1"/>
                                    <TextBox Text="{Binding ProcessCurrent.Prozess, ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" Validation.ErrorTemplate="{StaticResource NotEmptyValidator}" Grid.Column="2" Height="50" Grid.Row="1" Grid.ColumnSpan="2" TextWrapping="Wrap" VerticalAlignment="Center"/>
                                    <Button Command="{Binding Cmd_ShowMsg}" CommandParameter="{Binding Str_Msg_ProcessName}" Content="  ?  " Height="30" Width="30" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" Focusable="False" Template="{StaticResource EllipseWithText}" FontWeight="Bold"/>
                                    <TextBlock Text="Sub-Prozessname" Foreground="Black" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="2"/>
                                    <TextBox Text="{Binding ProcessCurrent.Sub_Prozess, UpdateSourceTrigger=PropertyChanged}" Validation.ErrorTemplate="{StaticResource NotEmptyValidator}" Grid.Column="2" Height="50" Grid.Row="2" Grid.ColumnSpan="2" TextWrapping="Wrap" VerticalAlignment="Center"/>
                                    <Button Command="{Binding Cmd_ShowMsg}" CommandParameter="{Binding Str_Msg_SubProcessName}" Content="  ?  " Height="30" Width="30"  Grid.Column="1" Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Center" Focusable="False" Template="{StaticResource EllipseWithText}" FontWeight="Bold"/>
                                    <TextBlock Text="Verantwortliche OE" Foreground="Black" ToolTip="Pflichtfeld" FontWeight="Bold" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" Grid.Row="3"/>
                                    <ComboBox ItemsSource="{Binding List_OE}" SelectedItem="{Binding Proc_OE, UpdateSourceTrigger=PropertyChanged}" Validation.ErrorTemplate="{StaticResource NotEmptyValidator}" Grid.Column="2" Grid.Row="3" Grid.ColumnSpan="2" VerticalAlignment="Center"/>
                                    <Button Command="{Binding Cmd_ShowMsg}" CommandParameter="{Binding Str_Msg_OE}" Content="  ?  " Height="30" Width="30" Grid.Column="1" Grid.Row="3" HorizontalAlignment="Left" VerticalAlignment="Center" Focusable="False" Template="{StaticResource EllipseWithText}" FontWeight="Bold"/>
                                    <TextBlock Text="Prozesseigentümer" Foreground="Black" ToolTip="Pflichtfeld" FontWeight="Bold" TextAlignment="Center" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="4"/>
                                    <Button Command="{Binding Cmd_ShowMsg}" CommandParameter="{Binding Str_Msg_Owner}" Content="  ?  " Height="30" Width="30" Grid.Column="1" Grid.Row="4" HorizontalAlignment="Left" VerticalAlignment="Center" Focusable="False" Template="{StaticResource EllipseWithText}" FontWeight="Bold"/>
                                    <TextBlock Text="{Binding ProcessCurrent.Prozesseigentümer}" Foreground="Black" TextAlignment="Center" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="4" MinWidth="40"/>
                                    <TextBlock Text="Prozessverantwortlicher" Foreground="Black" ToolTip="Pflichtfeld" FontWeight="Bold" TextAlignment="Center" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="5"/>
                                    <ComboBox SelectedItem="{Binding Proc_Prozessverantwortlicher, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding List_ProcessResponsible}" Validation.ErrorTemplate="{StaticResource NotEmptyValidator}" Grid.Column="2" Grid.Row="5" VerticalAlignment="Center" Visibility="{Binding Proc_Prozessverantwortlicher_Check, Converter={StaticResource convHid}}"/>
                                    <CheckBox Content="Hinzufügen" Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" Grid.Row="5" IsChecked="{Binding Proc_Prozessverantwortlicher_Check, Mode=OneWayToSource}"/>
                                    <Button Command="{Binding Cmd_ShowMsg}" CommandParameter="{Binding Str_Msg_Responsible}" Content="  ?  " Height="30" Width="30" Grid.Column="1" Grid.Row="5" HorizontalAlignment="Left" VerticalAlignment="Center" Focusable="False" Template="{StaticResource EllipseWithText}" FontWeight="Bold"/>
                                    <Border Grid.Column="2" Grid.Row="5" Background="White" VerticalAlignment="Center" Visibility="{Binding Proc_Prozessverantwortlicher_Check, Converter={StaticResource convVis}}">
                                        <Grid>
                                            <TextBlock Grid.Column="2" Background="White" Grid.Row="1" VerticalAlignment="Center" Text="{Binding Str_Ph_Responsible}" Foreground="Gray" >
                                                <TextBlock.Visibility>
                                                    <MultiBinding Converter="{StaticResource TextInputToVisibilityConverter}">
                                                        <Binding ElementName="txtUserEntry2" Path="Text.IsEmpty" />
                                                        <Binding ElementName="txtUserEntry2" Path="IsFocused" />
                                                    </MultiBinding>
                                                </TextBlock.Visibility>
                                            </TextBlock>
                                            <TextBox Name="txtUserEntry2" Background="Transparent" Text="{Binding Proc_Prozessverantwortlicher_Text, UpdateSourceTrigger=PropertyChanged}" Validation.ErrorTemplate="{StaticResource NotEmptyValidator}" Grid.Column="2" TextWrapping="Wrap" VerticalAlignment="Center"/>
                                        </Grid>
                                    </Border>
                                    <TextBlock Text="Reifegrad des Prozesses" Foreground="Black" ToolTip="Pflichtfeld" FontWeight="Bold" TextAlignment="Center" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="6"/>
                                    <ComboBox ItemsSource="{Binding List_Maturity, UpdateSourceTrigger=PropertyChanged}" Validation.ErrorTemplate="{StaticResource NotEmptyValidator}" Grid.Column="2" Grid.Row="6" Grid.ColumnSpan="2" VerticalAlignment="Center" SelectedItem="{Binding ProcessCurrent.Reifegrad_des_Prozesses}"/>
                                    <Button Command="{Binding Cmd_OpenDocExtern}" CommandParameter="Reifegrad" Content="  ?  " Height="30" Width="30" Grid.Column="1" Grid.Row="6" HorizontalAlignment="Left" VerticalAlignment="Center" Tag="Reifegrad" Focusable="False" Template="{StaticResource EllipseWithText}" FontWeight="Bold"/>
                                </Grid>
                            </ScrollViewer>
                        </AdornerDecorator>
                    </TabItem>

                    <TabItem Header="Schnittstellen" IsEnabled="False">
                        <AdornerDecorator>
                            <Grid Background="#FFE5E5E5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="40"/>
                                    <RowDefinition Height="40"/>
                                    <RowDefinition Height="100*" MinHeight="40"/>
                                    <RowDefinition Height="100*" MinHeight="40"/>
                                    <RowDefinition Height="10"/>
                                    <RowDefinition Height="40"/>
                                    <RowDefinition Height="100*" MinHeight="40"/>
                                    <RowDefinition Height="100*" MinHeight="40"/>
                                    <RowDefinition Height="10"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="10"/>
                                    <ColumnDefinition Width="300*"/>
                                    <ColumnDefinition Width="120"/>
                                    <ColumnDefinition Width="300*"/>
                                    <ColumnDefinition Width="10"/>
                                </Grid.ColumnDefinitions>
                                <Button Command="{Binding Cmd_ResetValues}" Grid.ColumnSpan="2" Content="Maske zurücksetzen" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" Visibility="{Binding Mode, Converter={StaticResource ComparisonToVisConverter}, ConverterParameter={x:Static vm:ProcAppMode.Change}}">
                                    <Button.Triggers>
                                        <EventTrigger RoutedEvent="Button.Click">
                                            <BeginStoryboard Storyboard="{StaticResource InactiveVpSB}"/>
                                            <BeginStoryboard Storyboard="{StaticResource InactiveNpSB}"/>
                                        </EventTrigger>
                                    </Button.Triggers>
                                </Button>
                                <Button Command="{Binding Cmd_ShowMsg}" CommandParameter="{Binding Str_Msg_ProcToProc}" Content="?" Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center" Width="30" Height="30" FontWeight="Bold" Template="{StaticResource EllipseWithText}"/>
                                <Border Grid.Column="1" Grid.Row="1" Grid.RowSpan="7" Background="LightSteelBlue">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="35"/>
                                            <RowDefinition Height="35"/>
                                            <RowDefinition Height="35"/>
                                            <RowDefinition Height="100*"/>
                                        </Grid.RowDefinitions>
                                        <Label Content="Übersicht aller Prozesse" HorizontalAlignment="Center" VerticalAlignment="Top" FontWeight="Bold"/>
                                        <Label Content="OE-Filter:" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                                        <ComboBox SelectedItem="{Binding SelectedFilterItemVNp}" ItemsSource="{Binding List_OEVNp}" Margin="120,0,5,0" Grid.Row="1" VerticalAlignment="Bottom" Text="OE auswählen"/>
                                        <Label Content="Suche:" Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                                        <TextBox Grid.Row="2" Name="SearchBox1" Text="" VerticalAlignment="Center" KeyUp="SearchBox1_KeyUp" Margin="120,0,95,0"/>
                                        <Button Grid.Row="2" Content="Suche" VerticalAlignment="Center" Click="SearchButton1_Click" Margin ="0,0,5,0" Width="90" HorizontalAlignment="Right"/>
                                        <DataGrid
                                        Name="SourceDataGrid1"
                                        ItemsSource="{Binding List_Processes}"
                                        Grid.Row="3"
                                        CanUserAddRows="False"
                                        IsReadOnly="True"
                                        RowHeaderWidth="0"
                                        VerticalGridLinesBrush="LightGray"
                                        HorizontalGridLinesBrush="LightGray"
                                        AutoGenerateColumns="False"
                                        SelectedItem="{Binding SelectedSourcevnPItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        Margin="5,0,5,5">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Width="250" Header="Prozess" Binding="{Binding Prozess}"/>
                                                <DataGridTextColumn Width="150" Header="Sub-Prozess" Binding="{Binding Sub_Prozess}"/>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </Grid>
                                </Border>
                                <Border Grid.Column="3" Grid.Row="1" Grid.RowSpan="3" Background="LightSteelBlue">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="35"/>
                                            <RowDefinition Height="30"/>
                                            <RowDefinition Height="100*"/>
                                        </Grid.RowDefinitions>
                                        <Label Content="Aktuell vorgelagerte Prozesse" HorizontalAlignment="Center" VerticalAlignment="Top" FontWeight="Bold"/>
                                        <Border x:Name="border1" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="{Binding Vis_DeletedProcessVpNotification}" RenderTransformOrigin="0.5,0.5">
                                            <Border.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Border.RenderTransform>
                                            <StackPanel Orientation="Horizontal">
                                                <Label x:Name="label1" Foreground="Red" FontWeight="Bold" Content=" Inaktive Prozesse zugeordnet "/>
                                                <Button Command="{Binding Cmd_ShowMsg}" CommandParameter="{Binding Str_Msg_InactiveProcs}" Content="?" Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center" Width="30" Height="30" FontWeight="Bold" Template="{StaticResource EllipseWithText}"/>
                                            </StackPanel>
                                        </Border>
                                        <DataGrid
                                        Name="TargetDataGrid1"
                                        ItemsSource="{Binding ProcessCurrent.VPList}"
                                        Grid.Row="2"
                                        RowHeaderWidth="0"
                                        CanUserAddRows="False"
                                        IsReadOnly="True"
                                        VerticalGridLinesBrush="LightGray"
                                        HorizontalGridLinesBrush="LightGray"
                                        AutoGenerateColumns="False"
                                        SelectedItem="{Binding SelectedTargetvPItem, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                                        Margin="5,0,5,5" SelectionChanged="TargetDataGrid_SelectionChanged">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Width="150" Header="Prozess" Binding="{Binding Prozess}"/>
                                                <DataGridTextColumn Width="150" Header="Sub-Prozess" Binding="{Binding Sub_Prozess}"/>
                                                <DataGridTextColumn Width="100" Header="OE" Binding="{Binding OE_Filter}"/>
                                                <DataGridTextColumn Width="Auto" Header="Verfügbar" Binding="{Binding Aktiv, Converter={StaticResource NumToAlphBinaryConverter}}"/>
                                            </DataGrid.Columns>
                                            <DataGrid.RowStyle>
                                                <Style TargetType="DataGridRow">
                                                    <Setter Property="Background" Value="{Binding Aktiv, Converter={StaticResource BinaryToBrushConverter}}"/>
                                                </Style>
                                            </DataGrid.RowStyle>
                                        </DataGrid>
                                    </Grid>
                                </Border>
                                <Border Grid.Column="3" Grid.Row="5" Grid.RowSpan="3" Background="LightSteelBlue">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="35"/>
                                            <RowDefinition Height="30"/>
                                            <RowDefinition Height="100*"/>
                                        </Grid.RowDefinitions>
                                        <Label Content="Aktuell nachgelagerte Prozesse" HorizontalAlignment="Center" VerticalAlignment="Top" FontWeight="Bold"/>
                                        <Border x:Name="border2" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center"  Visibility="{Binding Vis_DeletedProcessNpNotification}" RenderTransformOrigin="0.5,0.5">
                                            <Border.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Border.RenderTransform>
                                            <StackPanel Orientation="Horizontal">
                                                <Label x:Name="label2" Foreground="Red" FontWeight="Bold" Content=" Inaktive Prozesse zugeordnet "/>
                                                <Button Command="{Binding Cmd_ShowMsg}" CommandParameter="{Binding Str_Msg_InactiveProcs}" Content="?" Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center" Width="30" Height="30" FontWeight="Bold" Template="{StaticResource EllipseWithText}"/>
                                            </StackPanel>
                                        </Border>
                                        <DataGrid
                                        Name="TargetDataGrid2"
                                        ItemsSource="{Binding ProcessCurrent.NPList}"
                                        Grid.Row="2"
                                        RowHeaderWidth="0"
                                        CanUserAddRows="False"
                                        IsReadOnly="True"
                                        VerticalGridLinesBrush="LightGray"
                                        HorizontalGridLinesBrush="LightGray"
                                        AutoGenerateColumns="False"
                                        SelectedItem="{Binding SelectedTargetnPItem, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                                        Margin="5,0,5,5" SelectionChanged="TargetDataGrid_SelectionChanged">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Width="150" Header="Prozess" Binding="{Binding Prozess}"/>
                                                <DataGridTextColumn Width="150" Header="Sub-Prozess" Binding="{Binding Sub_Prozess}"/>
                                                <DataGridTextColumn Width="100" Header="OE" Binding="{Binding OE_Filter}"/>
                                                <DataGridTextColumn Width="Auto" Header="Verfügbar" Binding="{Binding Aktiv, Converter={StaticResource NumToAlphBinaryConverter}}"/>
                                            </DataGrid.Columns>
                                            <DataGrid.RowStyle>
                                                <Style TargetType="DataGridRow">
                                                    <Setter Property="Background" Value="{Binding Aktiv, Converter={StaticResource BinaryToBrushConverter}}"/>
                                                </Style>
                                            </DataGrid.RowStyle>
                                        </DataGrid>
                                    </Grid>
                                </Border>
                                <Button Content="hinzufügen&gt;" Grid.Column="2" Grid.Row="2" VerticalAlignment="Center" HorizontalAlignment="Center" CommandParameter="{Binding ElementName=SourceDataGrid1, Path=SelectedItems}" Command="{Binding Cmd_AddvP}" Click="ButtonAddvP_Click"/>
                                <Button Content="&lt;entfernen" Grid.Column="2" Grid.Row="3" VerticalAlignment="Center" HorizontalAlignment="Center" CommandParameter="{Binding ElementName=TargetDataGrid1, Path=SelectedItems}" Command="{Binding Cmd_RemovevP}"/>
                                <Button Content="hinzufügen&gt;" Grid.Column="2" Grid.Row="6" VerticalAlignment="Center" HorizontalAlignment="Center" CommandParameter="{Binding ElementName=SourceDataGrid1, Path=SelectedItems}" Command="{Binding Cmd_AddnP}" Click="ButtonAddnP_Click"/>
                                <Button Content="&lt;entfernen" Grid.Column="2" Grid.Row="7" VerticalAlignment="Center" HorizontalAlignment="Center" CommandParameter="{Binding ElementName=TargetDataGrid2, Path=SelectedItems}" Command="{Binding Cmd_RemovenP}"/>
                            </Grid>
                        </AdornerDecorator>
                    </TabItem>

                    <TabItem Header="Informationssegmente" IsEnabled="False">
                        <AdornerDecorator>
                            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                                <Grid x:Name="tab8Grid" Background="#FFE5E5E5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="10"/>
                                        <ColumnDefinition Width="120*"/>
                                        <ColumnDefinition Width="200*"/>
                                        <ColumnDefinition Width="50*"/>
                                        <ColumnDefinition Width="10"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="40"/>
                                        <RowDefinition Height="30*"/>
                                        <RowDefinition Height="30*"/>
                                        <RowDefinition Height="30*"/>
                                        <RowDefinition Height="30*"/>
                                        <RowDefinition Height="30*"/>
                                        <RowDefinition Height="30*"/>
                                        <RowDefinition Height="5*"/>
                                    </Grid.RowDefinitions>
                                    <Button Command="{Binding Cmd_ResetValues}" Grid.ColumnSpan="2" Content="Maske zurücksetzen" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" Visibility="{Binding Mode, Converter={StaticResource ComparisonToVisConverter}, ConverterParameter={x:Static vm:ProcAppMode.Change}}"/>
                                    <Button Command="{Binding Cmd_ShowMsg}" CommandParameter="{Binding Str_Msg_IS}" Content="  ?  " Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" Focusable="False" Width="30" Height="30" FontWeight="Bold" Template="{StaticResource EllipseWithText}"/>
                                    <Button Command="{Binding Cmd_NavToISViewChild}" Content="Übersicht" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Focusable="False"/>
                                    <TextBlock Text="Segment 1" Foreground="Black" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="2"/>
                                    <TextBlock Text="Segment 2" Foreground="Black" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="3"/>
                                    <TextBlock Text="Segment 3" Foreground="Black" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="4"/>
                                    <TextBlock Text="Segment 4" Foreground="Black" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="5"/>
                                    <TextBlock Text="Segment 5" Foreground="Black" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="6"/>

                                    <ComboBox Name="c1" ItemsSource="{Binding List_IS}" SelectedItem="{Binding Proc_Relevantes_IS_1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" DisplayMemberPath="Value" Grid.Column="2" VerticalAlignment="Center" Grid.Row="2"/>
                                    <Button Command="{Binding Cmd_NavToIS}" CommandParameter="{Binding ElementName=c1, Path=SelectedItem.Key}" Content="Info" Grid.Column="3" Grid.Row="2" VerticalAlignment="Center" HorizontalContentAlignment="Center"/>
                                    <ComboBox Name="c2" ItemsSource="{Binding List_IS}" SelectedItem="{Binding Proc_Relevantes_IS_2}" SelectedValuePath="Key" DisplayMemberPath="Value" Grid.Column="2" VerticalAlignment="Center" Grid.Row="3"/>
                                    <Button Command="{Binding Cmd_NavToIS}" CommandParameter="{Binding ElementName=c2, Path=SelectedItem.Key}" Content="Info" Grid.Column="3" Grid.Row="3" VerticalAlignment="Center" HorizontalContentAlignment="Center"/>
                                    <ComboBox Name="c3" ItemsSource="{Binding List_IS}" SelectedItem="{Binding Proc_Relevantes_IS_3}" SelectedValuePath="Key" DisplayMemberPath="Value" Grid.Column="2" VerticalAlignment="Center" Grid.Row="4"/>
                                    <Button Command="{Binding Cmd_NavToIS}" CommandParameter="{Binding ElementName=c3, Path=SelectedItem.Key}" Content="Info" Grid.Column="3" Grid.Row="4" VerticalAlignment="Center" HorizontalContentAlignment="Center"/>
                                    <ComboBox Name="c4" ItemsSource="{Binding List_IS}" SelectedItem="{Binding Proc_Relevantes_IS_4}" SelectedValuePath="Key" DisplayMemberPath="Value" Grid.Column="2" VerticalAlignment="Center" Grid.Row="5"/>
                                    <Button Command="{Binding Cmd_NavToIS}" CommandParameter="{Binding ElementName=c4, Path=SelectedItem.Key}" Content="Info" Grid.Column="3" Grid.Row="5" VerticalAlignment="Center" HorizontalContentAlignment="Center"/>
                                    <ComboBox Name="c5" ItemsSource="{Binding List_IS}" SelectedItem="{Binding Proc_Relevantes_IS_5}" SelectedValuePath="Key" DisplayMemberPath="Value" Grid.Column="2" VerticalAlignment="Center" Grid.Row="6"/>
                                    <Button Command="{Binding Cmd_NavToIS}" CommandParameter="{Binding ElementName=c5, Path=SelectedItem.Key}" Content="Info" Grid.Column="3" Grid.Row="6" VerticalAlignment="Center" HorizontalContentAlignment="Center"/>
                                </Grid>
                            </ScrollViewer>
                        </AdornerDecorator>
                    </TabItem>
                    <TabItem Header="Schutzziele" IsEnabled="False">
                        <AdornerDecorator>
                            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                                <Grid Background="#FFE5E5E5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="10"/>
                                        <ColumnDefinition Width="120*"/>
                                        <ColumnDefinition Width="50*"/>
                                        <ColumnDefinition Width="50*"/>
                                        <ColumnDefinition Width="50*"/>
                                        <ColumnDefinition Width="50*"/>
                                        <ColumnDefinition Width="50*"/>
                                        <ColumnDefinition Width="10"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="40"/>
                                        <RowDefinition Height="25*" MinHeight="40"/>
                                        <RowDefinition Height="25*" MinHeight="40"/>
                                        <RowDefinition Height="25*" MinHeight="40"/>
                                        <RowDefinition Height="25*" MinHeight="40"/>
                                        <RowDefinition Height="25*" MinHeight="40"/>
                                        <RowDefinition Height="25*" MinHeight="40"/>
                                        <RowDefinition Height="25*" MinHeight="40"/>
                                        <RowDefinition Height="25*" MinHeight="40"/>
                                        <RowDefinition Height="5*"/>
                                    </Grid.RowDefinitions>
                                    <Button Command="{Binding Cmd_ResetValues}" Grid.ColumnSpan="2" Content="Maske zurücksetzen" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" Visibility="{Binding Mode, Converter={StaticResource ComparisonToVisConverter}, ConverterParameter={x:Static vm:ProcAppMode.Change}}"/>
                                    <Border Name="b1" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="6">
                                        <Border.Background>
                                            <MultiBinding Converter="{StaticResource ISToBrushConverter}">
                                                <Binding Path="SZ_1_Max"/>
                                                <Binding Path="ProcessCurrent.SZ_1"/>
                                            </MultiBinding>
                                        </Border.Background>
                                    </Border>
                                    <Border Name="b2" Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="6">
                                        <Border.Background>
                                            <MultiBinding Converter="{StaticResource ISToBrushConverter}">
                                                <Binding Path="SZ_2_Max"/>
                                                <Binding Path="ProcessCurrent.SZ_2"/>
                                            </MultiBinding>
                                        </Border.Background>
                                    </Border>
                                    <Border Name="b3" Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="6">
                                        <Border.Background>
                                            <MultiBinding Converter="{StaticResource ISToBrushConverter}">
                                                <Binding Path="SZ_3_Max"/>
                                                <Binding Path="ProcessCurrent.SZ_3"/>
                                            </MultiBinding>
                                        </Border.Background>
                                    </Border>
                                    <Border Name="b4" Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="6">
                                        <Border.Background>
                                            <MultiBinding Converter="{StaticResource ISToBrushConverter}">
                                                <Binding Path="SZ_4_Max"/>
                                                <Binding Path="ProcessCurrent.SZ_4"/>
                                            </MultiBinding>
                                        </Border.Background>
                                    </Border>
                                    <Border Name="b5" Grid.Row="6" Grid.Column="1" Grid.ColumnSpan="6" Visibility="{Binding Path=Vis_NewSecurityGoals, Converter={StaticResource convVis}}">
                                        <Border.Background>
                                            <MultiBinding Converter="{StaticResource ISToBrushConverter}">
                                                <Binding Path="SZ_5_Max"/>
                                                <Binding Path="ProcessCurrent.SZ_5"/>
                                            </MultiBinding>
                                        </Border.Background>
                                    </Border>
                                    <Border Name="b6" Grid.Row="7" Grid.Column="1" Grid.ColumnSpan="6" Visibility="{Binding Path=Vis_NewSecurityGoals, Converter={StaticResource convVis}}">
                                        <Border.Background>
                                            <MultiBinding Converter="{StaticResource ISToBrushConverter}">
                                                <Binding Path="SZ_6_Max"/>
                                                <Binding Path="ProcessCurrent.SZ_6"/>
                                            </MultiBinding>
                                        </Border.Background>
                                    </Border>

                                    <Label Content="Schutzziel" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1"/>
                                    <Label Content="nicht relevant" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1"/>
                                    <Label Content="normal" Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1"/>
                                    <Label Content="mittel" Grid.Column="4" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1"/>
                                    <Label Content="hoch" Grid.Column="5" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1"/>
                                    <Label Content="sehr hoch" Grid.Column="6" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1"/>

                                    <TextBlock Text="{Binding Setting.SZ_1_Name}" Foreground="Black" FontWeight="Bold" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="2"/>
                                    <Button Command="{Binding Cmd_OpenDocExtern}" CommandParameter="SZ_1" Content="  ?  " Grid.Column="1" Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Center" Tag="SZ_1" Focusable="False" Width="30" Height="30" FontWeight="Bold" Template="{StaticResource EllipseWithText}"/>
                                    <RadioButton GroupName="SZ_1" Grid.Column="2" HorizontalAlignment="Center" Grid.Row="2" VerticalAlignment="Center" IsChecked="{Binding ProcessCurrent.SZ_1, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:SZ_Values.None}}" IsEnabled="{Binding SZ_1_Max, Converter={StaticResource MaxValuesToEnabledConverter}, ConverterParameter={x:Static vm:SZ_Values.None}}"/>
                                    <RadioButton GroupName="SZ_1" Grid.Column="3" HorizontalAlignment="Center" Grid.Row="2" VerticalAlignment="Center" IsChecked="{Binding ProcessCurrent.SZ_1, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:SZ_Values.Low}}" IsEnabled="{Binding SZ_1_Max, Converter={StaticResource MaxValuesToEnabledConverter}, ConverterParameter={x:Static vm:SZ_Values.Low}}"/>
                                    <RadioButton GroupName="SZ_1" Grid.Column="4" HorizontalAlignment="Center" Grid.Row="2" VerticalAlignment="Center" IsChecked="{Binding ProcessCurrent.SZ_1, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:SZ_Values.Medium}}" IsEnabled="{Binding SZ_1_Max, Converter={StaticResource MaxValuesToEnabledConverter}, ConverterParameter={x:Static vm:SZ_Values.Medium}}"/>
                                    <RadioButton GroupName="SZ_1" Grid.Column="5" HorizontalAlignment="Center" Grid.Row="2" VerticalAlignment="Center" IsChecked="{Binding ProcessCurrent.SZ_1, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:SZ_Values.High}}" IsEnabled="{Binding SZ_1_Max, Converter={StaticResource MaxValuesToEnabledConverter}, ConverterParameter={x:Static vm:SZ_Values.High}}"/>
                                    <RadioButton GroupName="SZ_1" Grid.Column="6" HorizontalAlignment="Center" Grid.Row="2" VerticalAlignment="Center" IsChecked="{Binding ProcessCurrent.SZ_1, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:SZ_Values.Veryhigh}}" IsEnabled="{Binding SZ_1_Max, Converter={StaticResource MaxValuesToEnabledConverter}, ConverterParameter={x:Static vm:SZ_Values.Veryhigh}}"/>

                                    <TextBlock Text="{Binding Setting.SZ_2_Name}" Foreground="Black" FontWeight="Bold" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="3" />
                                    <Button Command="{Binding Cmd_OpenDocExtern}" CommandParameter="SZ_2" Content="  ?  " Grid.Column="1" Grid.Row="3" HorizontalAlignment="Left" VerticalAlignment="Center" Tag="SZ_2" Focusable="False" Width="30" Height="30" FontWeight="Bold" Template="{StaticResource EllipseWithText}"/>
                                    <RadioButton GroupName="SZ_2" Grid.Column="2" HorizontalAlignment="Center" Grid.Row="3" VerticalAlignment="Center" IsChecked="{Binding ProcessCurrent.SZ_2, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:SZ_Values.None}}" IsEnabled="{Binding SZ_2_Max, Converter={StaticResource MaxValuesToEnabledConverter}, ConverterParameter={x:Static vm:SZ_Values.None}}"/>
                                    <RadioButton GroupName="SZ_2" Grid.Column="3" HorizontalAlignment="Center" Grid.Row="3" VerticalAlignment="Center" IsChecked="{Binding ProcessCurrent.SZ_2, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:SZ_Values.Low}}" IsEnabled="{Binding SZ_2_Max, Converter={StaticResource MaxValuesToEnabledConverter}, ConverterParameter={x:Static vm:SZ_Values.Low}}"/>
                                    <RadioButton GroupName="SZ_2" Grid.Column="4" HorizontalAlignment="Center" Grid.Row="3" VerticalAlignment="Center" IsChecked="{Binding ProcessCurrent.SZ_2, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:SZ_Values.Medium}}" IsEnabled="{Binding SZ_2_Max, Converter={StaticResource MaxValuesToEnabledConverter}, ConverterParameter={x:Static vm:SZ_Values.Medium}}"/>
                                    <RadioButton GroupName="SZ_2" Grid.Column="5" HorizontalAlignment="Center" Grid.Row="3" VerticalAlignment="Center" IsChecked="{Binding ProcessCurrent.SZ_2, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:SZ_Values.High}}" IsEnabled="{Binding SZ_2_Max, Converter={StaticResource MaxValuesToEnabledConverter}, ConverterParameter={x:Static vm:SZ_Values.High}}"/>
                                    <RadioButton GroupName="SZ_2" Grid.Column="6" HorizontalAlignment="Center" Grid.Row="3" VerticalAlignment="Center" IsChecked="{Binding ProcessCurrent.SZ_2, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:SZ_Values.Veryhigh}}" IsEnabled="{Binding SZ_2_Max, Converter={StaticResource MaxValuesToEnabledConverter}, ConverterParameter={x:Static vm:SZ_Values.Veryhigh}}"/>

                                    <TextBlock Text="{Binding Setting.SZ_3_Name}" Foreground="Black" FontWeight="Bold" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="4"/>
                                    <Button Command="{Binding Cmd_OpenDocExtern}" CommandParameter="SZ_3" Content="  ?  " Grid.Column="1" Grid.Row="4" VerticalAlignment="Center" HorizontalAlignment="Left" Tag="SZ_3" Focusable="False" Width="30" Height="30" FontWeight="Bold" Template="{StaticResource EllipseWithText}"/>
                                    <RadioButton GroupName="SZ_3" Grid.Column="2" HorizontalAlignment="Center" Grid.Row="4" VerticalAlignment="Center" IsChecked="{Binding ProcessCurrent.SZ_3, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:SZ_Values.None}}" IsEnabled="{Binding SZ_3_Max, Converter={StaticResource MaxValuesToEnabledConverter}, ConverterParameter={x:Static vm:SZ_Values.None}}"/>
                                    <RadioButton GroupName="SZ_3" Grid.Column="3" HorizontalAlignment="Center" Grid.Row="4" VerticalAlignment="Center" IsChecked="{Binding ProcessCurrent.SZ_3, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:SZ_Values.Low}}" IsEnabled="{Binding SZ_3_Max, Converter={StaticResource MaxValuesToEnabledConverter}, ConverterParameter={x:Static vm:SZ_Values.Low}}"/>
                                    <RadioButton GroupName="SZ_3" Grid.Column="4" HorizontalAlignment="Center" Grid.Row="4" VerticalAlignment="Center" IsChecked="{Binding ProcessCurrent.SZ_3, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:SZ_Values.Medium}}" IsEnabled="{Binding SZ_3_Max, Converter={StaticResource MaxValuesToEnabledConverter}, ConverterParameter={x:Static vm:SZ_Values.Medium}}"/>
                                    <RadioButton GroupName="SZ_3" Grid.Column="5" HorizontalAlignment="Center" Grid.Row="4" VerticalAlignment="Center" IsChecked="{Binding ProcessCurrent.SZ_3, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:SZ_Values.High}}" IsEnabled="{Binding SZ_3_Max, Converter={StaticResource MaxValuesToEnabledConverter}, ConverterParameter={x:Static vm:SZ_Values.High}}"/>
                                    <RadioButton GroupName="SZ_3" Grid.Column="6" HorizontalAlignment="Center" Grid.Row="4" VerticalAlignment="Center" IsChecked="{Binding ProcessCurrent.SZ_3, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:SZ_Values.Veryhigh}}" IsEnabled="{Binding SZ_3_Max, Converter={StaticResource MaxValuesToEnabledConverter}, ConverterParameter={x:Static vm:SZ_Values.Veryhigh}}"/>

                                    <TextBlock Text="{Binding Setting.SZ_4_Name}" Foreground="Black" FontWeight="Bold" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="5"/>
                                    <Button Command="{Binding Cmd_OpenDocExtern}" CommandParameter="SZ_4" Content="  ?  " Grid.Column="1" Grid.Row="5" VerticalAlignment="Center" HorizontalAlignment="Left" Tag="SZ_4" Focusable="False" Width="30" Height="30" FontWeight="Bold" Template="{StaticResource EllipseWithText}"/>
                                    <RadioButton GroupName="SZ_4" Grid.Column="2" HorizontalAlignment="Center" Grid.Row="5" VerticalAlignment="Center" IsChecked="{Binding ProcessCurrent.SZ_4, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:SZ_Values.None}}" IsEnabled="{Binding SZ_4_Max, Converter={StaticResource MaxValuesToEnabledConverter}, ConverterParameter={x:Static vm:SZ_Values.None}}"/>
                                    <RadioButton GroupName="SZ_4" Grid.Column="3" HorizontalAlignment="Center" Grid.Row="5" VerticalAlignment="Center" IsChecked="{Binding ProcessCurrent.SZ_4, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:SZ_Values.Low}}" IsEnabled="{Binding SZ_4_Max, Converter={StaticResource MaxValuesToEnabledConverter}, ConverterParameter={x:Static vm:SZ_Values.Low}}"/>
                                    <RadioButton GroupName="SZ_4" Grid.Column="4" HorizontalAlignment="Center" Grid.Row="5" VerticalAlignment="Center" IsChecked="{Binding ProcessCurrent.SZ_4, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:SZ_Values.Medium}}" IsEnabled="{Binding SZ_4_Max, Converter={StaticResource MaxValuesToEnabledConverter}, ConverterParameter={x:Static vm:SZ_Values.Medium}}"/>
                                    <RadioButton GroupName="SZ_4" Grid.Column="5" HorizontalAlignment="Center" Grid.Row="5" VerticalAlignment="Center" IsChecked="{Binding ProcessCurrent.SZ_4, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:SZ_Values.High}}" IsEnabled="{Binding SZ_4_Max, Converter={StaticResource MaxValuesToEnabledConverter}, ConverterParameter={x:Static vm:SZ_Values.High}}"/>
                                    <RadioButton GroupName="SZ_4" Grid.Column="6" HorizontalAlignment="Center" Grid.Row="5" VerticalAlignment="Center" IsChecked="{Binding ProcessCurrent.SZ_4, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:SZ_Values.Veryhigh}}" IsEnabled="{Binding SZ_4_Max, Converter={StaticResource MaxValuesToEnabledConverter}, ConverterParameter={x:Static vm:SZ_Values.Veryhigh}}"/>

                                    <TextBlock Text="{Binding Setting.SZ_5_Name}" Foreground="Black" FontWeight="Bold" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="6" Visibility="{Binding Path=Vis_NewSecurityGoals, Converter={StaticResource convVis}}"/>
                                    <Button Command="{Binding Cmd_OpenDocExtern}" CommandParameter="SZ_5" Content="  ?  " Grid.Column="1" Grid.Row="6" VerticalAlignment="Center" HorizontalAlignment="Left" Visibility="{Binding Path=Vis_NewSecurityGoals, Converter={StaticResource convVis}}" Width="30" Height="30" FontWeight="Bold" Template="{StaticResource EllipseWithText}"/>
                                    <RadioButton GroupName="SZ_5" Grid.Column="2" HorizontalAlignment="Center" Grid.Row="6" VerticalAlignment="Center" Visibility="{Binding Path=Vis_NewSecurityGoals, Converter={StaticResource convVis}}" IsChecked="{Binding ProcessCurrent.SZ_5, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:SZ_Values.None}}" IsEnabled="{Binding SZ_5_Max, Converter={StaticResource MaxValuesToEnabledConverter}, ConverterParameter={x:Static vm:SZ_Values.None}}"/>
                                    <RadioButton GroupName="SZ_5" Grid.Column="3" HorizontalAlignment="Center" Grid.Row="6" VerticalAlignment="Center" Visibility="{Binding Path=Vis_NewSecurityGoals, Converter={StaticResource convVis}}" IsChecked="{Binding ProcessCurrent.SZ_5, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:SZ_Values.Low}}" IsEnabled="{Binding SZ_5_Max, Converter={StaticResource MaxValuesToEnabledConverter}, ConverterParameter={x:Static vm:SZ_Values.Low}}"/>
                                    <RadioButton GroupName="SZ_5" Grid.Column="4" HorizontalAlignment="Center" Grid.Row="6" VerticalAlignment="Center" Visibility="{Binding Path=Vis_NewSecurityGoals, Converter={StaticResource convVis}}" IsChecked="{Binding ProcessCurrent.SZ_5, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:SZ_Values.Medium}}" IsEnabled="{Binding SZ_5_Max, Converter={StaticResource MaxValuesToEnabledConverter}, ConverterParameter={x:Static vm:SZ_Values.Medium}}"/>
                                    <RadioButton GroupName="SZ_5" Grid.Column="5" HorizontalAlignment="Center" Grid.Row="6" VerticalAlignment="Center" Visibility="{Binding Path=Vis_NewSecurityGoals, Converter={StaticResource convVis}}" IsChecked="{Binding ProcessCurrent.SZ_5, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:SZ_Values.High}}" IsEnabled="{Binding SZ_5_Max, Converter={StaticResource MaxValuesToEnabledConverter}, ConverterParameter={x:Static vm:SZ_Values.High}}"/>
                                    <RadioButton GroupName="SZ_5" Grid.Column="6" HorizontalAlignment="Center" Grid.Row="6" VerticalAlignment="Center" Visibility="{Binding Path=Vis_NewSecurityGoals, Converter={StaticResource convVis}}" IsChecked="{Binding ProcessCurrent.SZ_5, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:SZ_Values.Veryhigh}}" IsEnabled="{Binding SZ_5_Max, Converter={StaticResource MaxValuesToEnabledConverter}, ConverterParameter={x:Static vm:SZ_Values.Veryhigh}}"/>

                                    <TextBlock Text="{Binding Setting.SZ_6_Name}" Foreground="Black" FontWeight="Bold" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="7" Visibility="{Binding Path=Vis_NewSecurityGoals, Converter={StaticResource convVis}}"/>
                                    <Button Command="{Binding Cmd_OpenDocExtern}" CommandParameter="SZ_6" Content="  ?  " Grid.Column="1" Grid.Row="7" VerticalAlignment="Center" HorizontalAlignment="Left" Visibility="{Binding Path=Vis_NewSecurityGoals, Converter={StaticResource convVis}}" Width="30" Height="30" FontWeight="Bold" Template="{StaticResource EllipseWithText}"/>
                                    <RadioButton GroupName="SZ_6" Grid.Column="2" HorizontalAlignment="Center" Grid.Row="7" VerticalAlignment="Center" Visibility="{Binding Path=Vis_NewSecurityGoals, Converter={StaticResource convVis}}" IsChecked="{Binding ProcessCurrent.SZ_6, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:SZ_Values.None}}" IsEnabled="{Binding SZ_6_Max, Converter={StaticResource MaxValuesToEnabledConverter}, ConverterParameter={x:Static vm:SZ_Values.None}}"/>
                                    <RadioButton GroupName="SZ_6" Grid.Column="3" HorizontalAlignment="Center" Grid.Row="7" VerticalAlignment="Center" Visibility="{Binding Path=Vis_NewSecurityGoals, Converter={StaticResource convVis}}" IsChecked="{Binding ProcessCurrent.SZ_6, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:SZ_Values.Low}}" IsEnabled="{Binding SZ_6_Max, Converter={StaticResource MaxValuesToEnabledConverter}, ConverterParameter={x:Static vm:SZ_Values.Low}}"/>
                                    <RadioButton GroupName="SZ_6" Grid.Column="4" HorizontalAlignment="Center" Grid.Row="7" VerticalAlignment="Center" Visibility="{Binding Path=Vis_NewSecurityGoals, Converter={StaticResource convVis}}" IsChecked="{Binding ProcessCurrent.SZ_6, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:SZ_Values.Medium}}" IsEnabled="{Binding SZ_6_Max, Converter={StaticResource MaxValuesToEnabledConverter}, ConverterParameter={x:Static vm:SZ_Values.Medium}}"/>
                                    <RadioButton GroupName="SZ_6" Grid.Column="5" HorizontalAlignment="Center" Grid.Row="7" VerticalAlignment="Center" Visibility="{Binding Path=Vis_NewSecurityGoals, Converter={StaticResource convVis}}" IsChecked="{Binding ProcessCurrent.SZ_6, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:SZ_Values.High}}" IsEnabled="{Binding SZ_6_Max, Converter={StaticResource MaxValuesToEnabledConverter}, ConverterParameter={x:Static vm:SZ_Values.High}}"/>
                                    <RadioButton GroupName="SZ_6" Grid.Column="6" HorizontalAlignment="Center" Grid.Row="7" VerticalAlignment="Center" Visibility="{Binding Path=Vis_NewSecurityGoals, Converter={StaticResource convVis}}" IsChecked="{Binding ProcessCurrent.SZ_6, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:SZ_Values.Veryhigh}}" IsEnabled="{Binding SZ_6_Max, Converter={StaticResource MaxValuesToEnabledConverter}, ConverterParameter={x:Static vm:SZ_Values.Veryhigh}}"/>
                                    <Border Grid.Row="8" Grid.Column="1" Grid.ColumnSpan="6" VerticalAlignment="Center">
                                        <Border.Visibility>
                                            <MultiBinding Converter="{StaticResource InfoVisConverter}">
                                                <Binding ElementName="b1" Path="Background"/>
                                                <Binding ElementName="b2" Path="Background"/>
                                                <Binding ElementName="b3" Path="Background"/>
                                                <Binding ElementName="b4" Path="Background"/>
                                                <Binding ElementName="b5" Path="Background"/>
                                                <Binding ElementName="b6" Path="Background"/>
                                            </MultiBinding>
                                        </Border.Visibility>
                                        <StackPanel Orientation="Horizontal">
                                            <Rectangle Fill="LightSalmon" Width="50" HorizontalAlignment="Left" Height="30" Stroke="Black"/>
                                            <Label Content="Durch Informationssegmente vorgegebene Mindesteinstufung nicht erreicht"/>
                                        </StackPanel>
                                    </Border>
                                </Grid>
                            </ScrollViewer>
                        </AdornerDecorator>
                    </TabItem>
                    <TabItem Header="Wiederherstellungszeit" IsEnabled="False">
                        <AdornerDecorator>
                            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                                <Grid Background="#FFE5E5E5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="10"/>
                                        <ColumnDefinition Width="120*"/>
                                        <ColumnDefinition Width="250*"/>
                                        <ColumnDefinition Width="10"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="40"/>
                                        <RowDefinition Height="37.5*" MinHeight="40"/>
                                        <RowDefinition Height="37.5*" MinHeight="40"/>
                                        <RowDefinition Height="37.5*" MinHeight="40"/>
                                        <RowDefinition Height="37.5*" MinHeight="40"/>
                                        <RowDefinition Height="5*"/>
                                    </Grid.RowDefinitions>
                                    <Button Command="{Binding Cmd_ResetValues}" Grid.ColumnSpan="2" Content="Maske zurücksetzen" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" Visibility="{Binding Mode, Converter={StaticResource ComparisonToVisConverter}, ConverterParameter={x:Static vm:ProcAppMode.Change}}"/>
                                    <Border Grid.Column="2" Grid.Row="1" Background="White" VerticalAlignment="Center">
                                        <Grid>
                                            <TextBlock Grid.Column="2" Background="White" Grid.Row="1" VerticalAlignment="Center" Text="{Binding Str_Ph_Times}" Foreground="Gray" >
                                                <TextBlock.Visibility>
                                                    <MultiBinding Converter="{StaticResource TextInputToVisibilityConverter}">
                                                        <Binding ElementName="txtUserEntry3" Path="Text.IsEmpty" />
                                                        <Binding ElementName="txtUserEntry3" Path="IsFocused" />
                                                    </MultiBinding>
                                                </TextBlock.Visibility>
                                            </TextBlock>
                                            <TextBox Name="txtUserEntry3" Background="Transparent" Text="{Binding ProcessCurrent.Servicezeit_Helpdesk, UpdateSourceTrigger=PropertyChanged}" Validation.ErrorTemplate="{StaticResource NotEmptyValidator}" Grid.Column="2" VerticalAlignment="Center" Grid.Row="1"/>
                                        </Grid>
                                    </Border>
                                    <TextBlock Text="Servicezeiten" Foreground="Black" ToolTip="Pflichtfeld" FontWeight="Bold" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1"/>
                                    <Button Command="{Binding Cmd_ShowMsg}" CommandParameter="{Binding Str_Msg_ServiceTimes}" Content="  ?  " Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" Focusable="False" Width="30" Height="30" FontWeight="Bold" Template="{StaticResource EllipseWithText}"/>
                                    <TextBlock Text="Max. tolerierbarer Datenverlust&#10;(Normalbetrieb) in Stunden&#10;(MTD)" Foreground="Black" FontWeight="Bold" TextAlignment="Center" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="2"/>
                                    <Label Content="24 Stunden (Standard)" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="2"/>
                                    <Button Command="{Binding Cmd_OpenDocExtern}" CommandParameter="MTD" Content="  ?  " Grid.Column="1" Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Center" Focusable="False" Width="30" Height="30" FontWeight="Bold" Template="{StaticResource EllipseWithText}"/>
                                    <TextBlock Text="Max. tolerierbare Ausfallzeit&#10;(Normalbetrieb) in Tagen&#10;(MTA)" Foreground="Black" ToolTip="Pflichtfeld" FontWeight="Bold" TextAlignment="Center" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="3"/>
                                    <ComboBox SelectedItem="{Binding ProcessCurrent.RTO_Wiederanlaufzeit_Recovery_Time_Objective}" ItemsSource="{Binding List_RTO}" Validation.ErrorTemplate="{StaticResource NotEmptyValidator}" Grid.Column="2" VerticalAlignment="Center" Grid.Row="3"/>
                                    <Button Command="{Binding Cmd_OpenDocExtern}" CommandParameter="MTA" Content="  ?  " Grid.Column="1" Grid.Row="3" HorizontalAlignment="Left" VerticalAlignment="Center" Focusable="False" Width="30" Height="30" FontWeight="Bold" Template="{StaticResource EllipseWithText}"/>
                                    <TextBlock Text="Max. tolerierbare Ausfallzeit&#10;(Notfall) in Tagen&#10;(MTA Notfall)" Foreground="Black" ToolTip="Pflichtfeld" FontWeight="Bold" TextAlignment="Center" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="4"/>
                                    <ComboBox SelectedItem="{Binding ProcessCurrent.RTO_Wiederanlaufzeit_Recovery_Time_Objective_Notfall}" ItemsSource="{Binding List_RTO}" Validation.ErrorTemplate="{StaticResource NotEmptyValidator}" Grid.Column="2" VerticalAlignment="Center" Grid.Row="4"/>
                                    <Button Command="{Binding Cmd_OpenDocExtern}" CommandParameter="MTA_Notfall" Content="  ?  " Grid.Column="1" Grid.Row="4" HorizontalAlignment="Left" VerticalAlignment="Center" Focusable="False" Width="30" Height="30" FontWeight="Bold" Template="{StaticResource EllipseWithText}"/>
                                </Grid>
                            </ScrollViewer>
                        </AdornerDecorator>
                    </TabItem>
                    <TabItem Header="Prozessrisiko" IsEnabled="False">
                        <AdornerDecorator>
                            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                                <Grid Background="#FFE5E5E5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="10"/>
                                        <ColumnDefinition Width="120*"/>
                                        <ColumnDefinition Width="250*"/>
                                        <ColumnDefinition Width="10"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="40"/>
                                        <RowDefinition Height="0" MinHeight="0"/>
                                        <RowDefinition Height="0" MinHeight="0"/>
                                        <RowDefinition Height="100*" MinHeight="40"/>
                                        <RowDefinition Height="200*" MinHeight="100"/>
                                        <RowDefinition Height="100*" MinHeight="60"/>
                                        <RowDefinition Height="10"/>
                                    </Grid.RowDefinitions>
                                    <Button Click="Crit_Reset_Combo_Click" Command="{Binding Cmd_ResetValues}" Grid.ColumnSpan="2" Content="Maske zurücksetzen" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" Visibility="{Binding Mode, Converter={StaticResource ComparisonToVisConverter}, ConverterParameter={x:Static vm:ProcAppMode.Change}}"/>
                                    <TextBlock Text="Regulatorisch" Foreground="Black" ToolTip=""  Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1"/>
                                    <CheckBox IsChecked="{Binding ProcessCurrent.Regulatorisch}" Content="Verletzung von Regularien " Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" Grid.Row="1"/>
                                    <Button Command="{Binding Cmd_ShowMsg}" CommandParameter="{Binding Str_Msg_Reg}" Content="  ?  " Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" Focusable="False" Width="30" Height="30" FontWeight="Bold" Template="{StaticResource EllipseWithText}"/>
                                    <TextBlock Text="Reputatorisch" Foreground="Black" ToolTip=""  Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="2"/>
                                    <CheckBox IsChecked="{Binding ProcessCurrent.Reputatorisch}" Content="Auswirkung auf Reputation" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" Grid.Row="2"/>
                                    <Button Command="{Binding Cmd_ShowMsg}" CommandParameter="{Binding Str_Msg_Rep}" Content="  ?  " Grid.Column="1" Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Center" Focusable="False" Width="30" Height="30" FontWeight="Bold" Template="{StaticResource EllipseWithText}"/>
                                    <TextBlock Text="Finanziell" Foreground="Black" ToolTip=""  Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="3"/>
                                    <CheckBox IsChecked="{Binding ProcessCurrent.Finanziell}" Content="Finanzielle Auswirkung       " Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" Grid.Row="3"/>
                                    <Button Command="{Binding Cmd_ShowMsg}" CommandParameter="{Binding Str_Msg_Fin}" Content="  ?  " Grid.Column="1" Grid.Row="3" HorizontalAlignment="Left" VerticalAlignment="Center" Focusable="False" Width="30" Height="30" FontWeight="Bold" Template="{StaticResource EllipseWithText}"/>
                                    <TextBlock Text="Kritischer Prozess" Foreground="Black" FontWeight="Bold" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="5"/>
                                    <TextBlock Text="Kritikalität des Prozesses" Foreground="Black" ToolTip="Pflichtfeld" FontWeight="Bold" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="4"/>
                                    <Button Command="{Binding Cmd_OpenDocExtern}" CommandParameter="Kritikalität" Content="  ?  " Grid.Column="1" Grid.Row="4" VerticalAlignment="Center" HorizontalAlignment="Left" Tag="Kritikalität" Focusable="False" Width="30" Height="30" FontWeight="Bold" Template="{StaticResource EllipseWithText}"/>
                                    <Grid Grid.Row="4" Grid.Column="2">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="25*"/>
                                            <ColumnDefinition Width="25*"/>
                                            <ColumnDefinition Width="20*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="20*"/>
                                            <RowDefinition Height="20*"/>
                                        </Grid.RowDefinitions>
                                        <ComboBox x:Name="Combo_Dmg" MinWidth="210" ItemsSource="{Binding List_Dmg}" SelectedItem="{Binding Proc_Schaden, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" DisplayMemberPath="Value" Validation.ErrorTemplate="{StaticResource NotEmptyValidator}" Grid.Column="1" VerticalAlignment="Center"/>
                                        <TextBlock Text="Potenzieller&#10;Schaden in Euro" Foreground="Black" TextAlignment="Center" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                        <ComboBox x:Name="Combo_Freq" MinWidth="210" ItemsSource="{Binding List_Freq}" SelectedItem="{Binding Proc_Frequenz, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" DisplayMemberPath="Value" Validation.ErrorTemplate="{StaticResource NotEmptyValidator}" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center"/>
                                        <TextBlock Margin="0,0,10,0" Text="Eintrittswahrscheinlichkeit" Foreground="Black" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="1"/>
                                        <TextBlock FontWeight="Bold" Foreground="Black" Text="{Binding ProcessCurrent.Kritikalität_des_Prozesses, UpdateSourceTrigger=PropertyChanged}" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.RowSpan="2" MinWidth="100" TextAlignment="Center"/>
                                        <Button Command="{Binding Cmd_ShowMsg}" CommandParameter="{Binding Str_Msg_Krit1}" Content="  ?  " Grid.Column="2" Grid.RowSpan="2" VerticalAlignment="Center" HorizontalAlignment="Left" Tag="Kritikalität" Focusable="False" Width="30" Height="30" FontWeight="Bold" Template="{StaticResource EllipseWithText}" Margin="10,0,0,0"/>
                                    </Grid>
                                    <Label x:Name="Crit_Label" Content="{Binding ProcessCurrent.Kritischer_Prozess, NotifyOnTargetUpdated=True}" Grid.Column="2" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="5" TargetUpdated="CritLabel_TargetUpdated">
                                        <Label.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ProcessCurrent.Kritischer_Prozess}" Value="Ja">
                                                        <DataTrigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                                                        <EasingColorKeyFrame KeyTime="0:0:0.0" Value="Black"/>
                                                                        <EasingColorKeyFrame KeyTime="0:0:0.8" Value="Red"/>
                                                                        <EasingColorKeyFrame KeyTime="0:0:1.0" Value="White"/>
                                                                        <EasingColorKeyFrame KeyTime="0:0:1.3" Value="Red"/>
                                                                    </ColorAnimationUsingKeyFrames>
                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.FontSize)">
                                                                        <EasingDoubleKeyFrame KeyTime="0:0:1.3" Value="26"/>
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.EnterActions>
                                                        <DataTrigger.ExitActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                                                        <EasingColorKeyFrame KeyTime="0:0:0.0" Value="Red"/>
                                                                        <EasingColorKeyFrame KeyTime="0:0:0.2" Value="White"/>
                                                                        <EasingColorKeyFrame KeyTime="0:0:0.5" Value="Black"/>
                                                                    </ColorAnimationUsingKeyFrames>
                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.FontSize)">
                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="14"/>
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.ExitActions>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Label.Style>
                                    </Label>
                                    <Button Command="{Binding Cmd_ShowMsg}" CommandParameter="{Binding Str_Msg_Krit}" Content="  ?  " Grid.Column="1" Grid.Row="5" VerticalAlignment="Center" HorizontalAlignment="Left" Focusable="False" Width="30" Height="30" FontWeight="Bold" Template="{StaticResource EllipseWithText}"/>
                                </Grid>
                            </ScrollViewer>
                        </AdornerDecorator>
                    </TabItem>
                    <TabItem Header="Verknüpfte Anwendungen" IsEnabled="False">
                        <AdornerDecorator>
                            <Grid Background="#FFE5E5E5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="40"/>
                                    <RowDefinition Height="80"/>
                                    <RowDefinition Height="100*" MinHeight="40"/>
                                    <RowDefinition Height="100*" MinHeight="40"/>
                                    <RowDefinition Height="10"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="10"/>
                                    <ColumnDefinition Width="300*"/>
                                    <ColumnDefinition Width="120"/>
                                    <ColumnDefinition Width="300*"/>
                                    <ColumnDefinition Width="10"/>
                                </Grid.ColumnDefinitions>
                                <Button Command="{Binding Cmd_ResetValues}" Grid.ColumnSpan="2" Content="Maske zurücksetzen" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" Visibility="{Binding Mode, Converter={StaticResource ComparisonToVisConverter}, ConverterParameter={x:Static vm:ProcAppMode.Change}}">
                                    <Button.Triggers>
                                        <EventTrigger RoutedEvent="Button.Click">
                                            <BeginStoryboard Storyboard="{StaticResource InactiveApplicationsSB}"/>
                                        </EventTrigger>
                                    </Button.Triggers>
                                </Button>
                                <Button Command="{Binding Cmd_ShowMsg}" CommandParameter="{Binding Str_Msg_AppToProc}" Content="?" Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center" Width="30" Height="30" FontWeight="Bold" Template="{StaticResource EllipseWithText}"/>
                                <Border Grid.Column="1" Grid.Row="1" Grid.RowSpan="3" Background="LightSteelBlue">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="35"/>
                                            <RowDefinition Height="35"/>
                                            <RowDefinition Height="35"/>
                                            <RowDefinition Height="100*"/>
                                        </Grid.RowDefinitions>
                                        <Label Content="Übersicht aller Anwendungen" HorizontalAlignment="Center" VerticalAlignment="Top" FontWeight="Bold"/>
                                        <Label Content="Kategorie-Filter:" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                                        <ComboBox SelectedItem="{Binding SelectedFilterItem}" ItemsSource="{Binding List_ApplicationCategories}" Margin="150,0,5,0" Grid.Row="1" VerticalAlignment="Bottom" Text="Anwendungskategorie auswählen"/>
                                        <Label Content="Suche:" Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                                        <TextBox Grid.Row="2" Name="SearchBox" Text="" VerticalAlignment="Center" KeyUp="SearchBox_KeyUp" Margin="150,0,95,0"/>
                                        <Button Grid.Row="2" Content="Suche" VerticalAlignment="Center" Click="SearchButton_Click" Margin ="0,0,5,0" Width="90" HorizontalAlignment="Right"/>
                                        <DataGrid
                                        Name="SourceDataGrid"
                                        ItemsSource="{Binding List_AllApplications}"
                                        Grid.Row="3"
                                        CanUserAddRows="False"
                                        IsReadOnly="True"
                                        RowHeaderWidth="0"
                                        VerticalGridLinesBrush="LightGray"
                                        HorizontalGridLinesBrush="LightGray"
                                        AutoGenerateColumns="False"
                                        SelectedItem="{Binding SelectedSourceAppItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        Margin="5,0,5,5">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Width="1500" Header="Anwendungsname" Binding="{Binding IT_Anwendung_System}"/>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </Grid>
                                </Border>
                                <Border Grid.Column="3" Grid.Row="1" Grid.RowSpan="3" Background="LightSteelBlue">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="40"/>
                                            <RowDefinition Height="40"/>
                                            <RowDefinition Height="100*"/>
                                        </Grid.RowDefinitions>
                                        <Label Content="Mit diesem Prozess verknüpfte Anwendungen" HorizontalAlignment="Center" VerticalAlignment="Top" FontWeight="Bold"/>
                                        <Border x:Name="border" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center"  Visibility="{Binding Vis_DeletedApplicationsNotification}" RenderTransformOrigin="0.5,0.5">
                                            <Border.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Border.RenderTransform>
                                            <StackPanel Orientation="Horizontal">
                                                <Label x:Name="label" Foreground="Red" FontWeight="Bold" Content=" Inaktive Anwendungen zugeordnet "/>
                                                <Button Command="{Binding Cmd_ShowMsg}" CommandParameter="{Binding Str_Msg_InactiveApps}" Content="?" Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center" Width="30" Height="30" FontWeight="Bold" Template="{StaticResource EllipseWithText}"/>
                                            </StackPanel>
                                        </Border>
                                        <DataGrid
                                        Name="TargetDataGrid"
                                        ItemsSource="{Binding ProcessCurrent.ApplicationList}"
                                        Grid.Row="2"
                                        RowHeaderWidth="0"
                                        CanUserAddRows="False"
                                        IsReadOnly="True"
                                        VerticalGridLinesBrush="LightGray"
                                        HorizontalGridLinesBrush="LightGray"
                                        AutoGenerateColumns="False"
                                        SelectedItem="{Binding SelectedTargetAppItem, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                                        Margin="5,0,5,5" SelectionChanged="TargetDataGrid_SelectionChanged">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Width="250" Header="Anwendungsname" Binding="{Binding IT_Anwendung_System}"/>
                                                <DataGridTextColumn Width="150" Header="Kategorie" Binding="{Binding IT_Betriebsart}"/>
                                                <DataGridTextColumn Width="Auto" Header="Verfügbar" Binding="{Binding Aktiv, Converter={StaticResource NumToAlphBinaryConverter}}"/>
                                            </DataGrid.Columns>
                                            <DataGrid.RowStyle>
                                                <Style TargetType="DataGridRow">
                                                    <Setter Property="Background" Value="{Binding Aktiv, Converter={StaticResource BinaryToBrushConverter}}"/>
                                                </Style>
                                            </DataGrid.RowStyle>
                                        </DataGrid>
                                    </Grid>
                                </Border>
                                <Button Content="hinzufügen&gt;" Grid.Column="2" Grid.Row="2" VerticalAlignment="Center" HorizontalAlignment="Center" CommandParameter="{Binding ElementName=SourceDataGrid, Path=SelectedItems}" Command="{Binding Cmd_AddApplication}" Click="ButtonAddApplication_Click"/>
                                <Button Content="&lt;entfernen" Grid.Column="2" Grid.Row="3" VerticalAlignment="Center" HorizontalAlignment="Center" CommandParameter="{Binding ElementName=TargetDataGrid, Path=SelectedItems}" Command="{Binding Cmd_RemoveApplication}"/>
                            </Grid>
                        </AdornerDecorator>
                    </TabItem>
                </TabControl>
                <Border Grid.Row="3" Grid.ColumnSpan="2" Grid.Column="0" Background="LightSteelBlue">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="300*"/>
                            <ColumnDefinition Width="300*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.ColumnSpan="2" Name="ButtonGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50*"/>
                                <ColumnDefinition Width="50*"/>
                            </Grid.ColumnDefinitions>
                            <Button Command="{Binding Cmd_NextTab}" Grid.Column="1" Content="Bestätigen und weiter >>" Background="White">
                                <Button.Triggers>
                                    <EventTrigger RoutedEvent="Button.Click">
                                        <BeginStoryboard Storyboard="{StaticResource InactiveApplicationsSB}"/>
                                        <BeginStoryboard Storyboard="{StaticResource InactiveVpSB}"/>
                                        <BeginStoryboard Storyboard="{StaticResource InactiveNpSB}"/>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="ButtonGrid">
                                                    <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="False" />
                                                    <DiscreteBooleanKeyFrame KeyTime="00:00:00.400" Value="True" />
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Button.Triggers>
                            </Button>
                            <Button Command="{Binding Cmd_SaveAndContinue}" Grid.Column="1" Content="Speichern und schließen" Background="LightGreen" Visibility="{Binding Vis_ButtonSave}"/>
                        </Grid>
                        <Button Grid.Column="0" Command="{Binding Cmd_PrevTab}" Content="&lt;&lt; Zurück" Background="White"/>
                    </Grid>
                </Border>
            </Grid>
        </Border>
    </Grid>
</UserControl>
